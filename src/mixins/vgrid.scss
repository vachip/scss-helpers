$vgrid-grid-gap: 1rem !default;

// If more than 100 cells... adjust variable
$vgrid-max-items: 50 !default;
$vgrid-max-cols: 6 !default;

@mixin vgrids(
$max-items: $vgrid-max-items,
$max-cols: $vgrid-max-cols,
) {
  @for $c from 1 through $max-cols {
    .vgrid-#{$c} {
      @for $i from 1 through $max-items {
        &.vcells-#{$i} {
          @include vgrid($i, $c);
        }
      }
    }
  }
}

@mixin vgrid($numItems, $columns) {
  display: grid;
  @include vcell($numItems, $columns);
  // TODO - breakpoints
}

@mixin vcell(
$numItems,
$numCols: 1,
$selector: '.vcell',
$grid-gap: $vgrid-grid-gap,
$reserveLastCell: false
) {
  $pct: calc(100% - calc(#{$grid-gap} * #{$numCols - 1}));

  $numRows: ceil(calc($numItems / $numCols));
  $numFullCols: $numCols - ($numRows * $numCols) + $numItems;
  @if ($reserveLastCell) {
    $numFullCols: $numFullCols - 1;
  }

  grid-gap: $vgrid-grid-gap;
  grid-template-columns: repeat(#{$numCols}, calc(#{$pct} / #{$numCols}));

  // Go through each column row-by-row and find the item
  $done: [];
  @for $c from 1 through $numCols {

    $r: 1;
    $maxRow: $numRows;
    @if ($c > $numFullCols) {
      $maxRow: $numRows - 1;
    }

    // Find the item for this cell
    @for $i from 0 to $numItems {
      @if (index($done, $i) == null) {
        @for $c2 from $c through $numCols {
          @if (index($done, $i) == null and $r <= $maxRow and ($i < ($c * $numRows))) {
            > :nth-child(#{$i+1}) {
              grid-column: $c;
              grid-row: $r;
            }
            $r: $r + 1;
            $done: append($done, $i);
          }
        }
      }
    }
  }
  // Always last cell (bottom/right) - keep at end of mixin
  @if($reserveLastCell) {
    > #{$selector}-last {
      grid-column: $numCols;
      grid-row: $numRows;
    }
  }
}


@mixin vcell-v1(
$numItems,
$numCols: 1,
$selector: '.vcell',
$grid-gap: $vgrid-grid-gap,
$reserveLastCell: false
) {
  $pct: calc(100% - calc(#{$grid-gap} * #{$numCols - 1}));

  $numRows: ceil(calc($numItems / $numCols));
  $numFullCols: $numCols - ($numRows * $numCols) + $numItems;
  @if ($reserveLastCell) {
    $numFullCols: $numFullCols - 1;
  }

  grid-gap: $vgrid-grid-gap;
  grid-template-columns: repeat(#{$numCols}, calc(#{$pct} / #{$numCols}));

  // Go through each column row-by-row and find the item
  $done: [];
  @for $c from 1 through $numCols {

    $r: 1;
    $maxRow: $numRows;
    @if ($c > $numFullCols) {
      $maxRow: $numRows - 1;
    }

    // Find the item for this cell
    @for $i from 0 to $numItems {
      @if (index($done, $i) == null) {
        @for $c2 from $c through $numCols {
          @if (index($done, $i) == null and $r <= $maxRow and ($i < ($c * $numRows))) {
            > #{$selector}-#{$i+1} {
              grid-column: $c;
              grid-row: $r;
            }
            $r: $r + 1;
            $done: append($done, $i);
          }
        }
      }
    }
  }
  // Always last cell (bottom/right) - keep at end of mixin
  @if($reserveLastCell) {
    > #{$selector}-last {
      grid-column: $numCols;
      grid-row: $numRows;
    }
  }
}
